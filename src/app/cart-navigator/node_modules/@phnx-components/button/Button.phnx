/**
 * This is a template for view definition file in
 * Project Phoenix : UI-Creator
 */
module.exports = {
    name: "Button",
    imports: [{
        type: 'css',
        from: './button.css'
    }],
    variables: [{
        name: "alias",
        type: "string",
        defaultValue: "button",
        metadata: [{
            displayName: "Alias",
            widget: "INPUT",
            widgetData: {},
            grouping: "General",
            target: "alias"
        }],
        isMandatory: false,
        scope: "public"

    }, {
        name: "buttonText",
        type: "string",
        defaultValue: "Approved",
        isMandatory: false,
        scope: "public",
        metadata: {
            displayName: "LABEL",
            widget: "INPUT",
            widgetData: {
                type: "text"
            },
            grouping: "General",
            target: "buttonText"
        }
    }, {
        name: "btnMaxWidth",
        type: "string",
        defaultValue: "70%",
        scope: "private"
    }, {
        name: "buttonToolTip",
        type: "string",
        defaultValue: "",
        scope: "public"
    }, {
        name: "iconFlag",
        defaultValue: {
            prefix: false,
            suffix: false
        },
        scope: "public",
        type: "object",
        metadata: [{
            displayName: "Display Prefix Icon",
            widget: "SWITCHERY",
            grouping: "General",
            target: "iconFlag.prefix",
            widgetData: {}
        },
            {
                displayName: "Display Suffix Icon",
                widget: "SWITCHERY",
                grouping: "General",
                target: "iconFlag.suffix",
                widgetData: {}
            }
        ]
    }, {
        name: "buttonClassname",
        type: "object",
        defaultValue: {
            __root: "btn btn-success",
            classButtonLabel: "textOverflowEllipsis",
            classPrefixIcon: "fa fa-check",
            classSuffixIcon: "fa fa-search"
        },
        properties: { erase: false },
        scope: "public",
        metadata: [{
            displayName: "Prefix",
            widget: "ICON_PICKER",
            widgetData: {},
            grouping: "ICON",
            target: "buttonClassname.classPrefixIcon"
        }, {
            displayName: "Suffix",
            widget: "ICON_PICKER",
            widgetData: {},
            grouping: "ICON",
            target: "buttonClassname.classSuffixIcon"
        }]
    }, {
        name: "compStyle",
        type: "object",
        properties: { erase: false },
        defaultValue: {
            __root: {
                position: 'inherit',
                height: 50,
                width: 150,
                backgroundColor: "#a8f0f0",
                borderWidth:"1px",
                borderStyle: {
                    text: "Solid",
                    className: "fa fa-trash",
                    id: "solid"
                },
                borderColor: "rgba(0,0,0,0.12)",
                borderRadius:0,
                overflowY: "hidden"
            },
            styleButtonLabel: {
                textOverflow: "ellipsis",
                overflow: "hidden",
                display: "inline-block",
                fontSize: "18px",
                fontFamily: 'Roboto',
                marginRight: "2px",
                marginLeft: "2px",
                color: "#4d4d4d",
                width: "-webkit-fill-available",
                verticalAlign: "middle",
                textAlign: "center",
                fontWeight: 'normal',
                fontStyle: 'normal',
                textDecoration: 'none'
            },
            stylePrefixIcon: {
                color: "#4d4d4d",
                fontSize: "18px"
            },
            styleSuffixIcon: {
                fontSize: "18px",
                color: "#4d4d4d"
            }
        },
        scope: "public",
        metadata: [{
            displayName: 'Button',
            widget: 'BUTTON_STYLE_PROPERTIES',
            widgetData: {
                hyperlinkTarget: 'hyperlink'
            },
            grouping: '',
            tab: 'Style',
            target: 'compStyle.__root'
        },{
            displayName: 'Button',
            widget: 'BUTTON_TEXT_PROPERTIES',
            widgetData: {
                buttonText: 'buttonText'
            },
            grouping: '',
            tab: 'Text',
            target: 'compStyle.styleButtonLabel'
        },{
            displayName: "Width",
            widget: "NUMERIC_STEPPER",
            widgetData: {
                minValue: 0
            },
            grouping: "General",
            target: "compStyle.__root.width"
        }, {
            displayName: "Height",
            widget: "NUMERIC_STEPPER",
            widgetData: {
                minValue: 0
            },
            grouping: "General",
            target: "compStyle.__root.height"
        }, {
            displayName: "Background Color",
            widget: "COLOR_PICKER",
            widgetData: {},
            grouping: "General",
            target: "compStyle.__root.backgroundColor"
        }, {
            displayName: "Border Width",
            widget: "NUMERIC_STEPPER",
            widgetData: {
                minValue: 0
            },
            grouping: "Style",
            target:"compStyle.__root.borderWidth"
        },{
            displayName: "Border Style",
            widget: "DROPDOWN",
            widgetData:{
                values: [
                    {
                        text: "None",
                        className: "fa fa-trash",
                        id: "none"
                    },
                    {
                        text: "Solid",
                        className: "fa fa-trash",
                        id: "solid"
                    },
                    {
                        text: "Dotted",
                        className: "fa fa-trash",
                        id: "dotted"
                    },
                    {
                        text: "Dashed",
                        className: "fa fa-trash",
                        id: "dashed"
                    },
                    {
                        text: "Double",
                        className: "fa fa-trash",
                        id: "double"
                    }

                ]
            },
            grouping: "Style",
            target: "compStyle.__root.borderStyle"
        },{
            displayName: "Border Color",
            widget: "COLOR_PICKER",
            widgetData: {},
            grouping: "Style",
            target: "compStyle.__root.borderColor"
        },{
            displayName: "Border Radius",
            widget: "NUMERIC_STEPPER",
            widgetData: {
                minValue: 0
            },
            grouping: "Style",
            target: "compStyle.__root.borderRadius"
        }, {
            displayName: "Font size",
            widget: "COMBOBOX",
            widgetData: {
                minValue: 0
            },
            grouping: "TYPOGRAPHY",
            target: "compStyle.styleButtonLabel.fontSize"
        }, {
            displayName: "Prefix Icon Size",
            widget: "COMBOBOX",
            widgetData: {
                minValue: 0
            },
            grouping: "ICON",
            target: "compStyle.stylePrefixIcon.fontSize"
        }, {
            displayName: "Prefix Icon Color",
            widget: "COLOR_PICKER",
            widgetData: {},
            grouping: "ICON",
            target: "compStyle.stylePrefixIcon.color"
        }, {
            displayName: "Suffix Icon Size",
            widget: "COMBOBOX",
            widgetData: {
                minValue: 0
            },
            grouping: "ICON",
            target: "compStyle.styleSuffixIcon.fontSize"
        }, {
            displayName: "Suffix Icon Color",
            widget: "COLOR_PICKER",
            widgetData: {},
            grouping: "ICON",
            target: "compStyle.styleSuffixIcon.color"
        }, {
            displayName: "Text Style",
            widget: "TEXT_FORMATTER",
            widgetData: {},
            grouping: "TYPOGRAPHY",
            target: "compStyle.styleButtonLabel.textStyle"
        }, {
            displayName: "Font Color",
            widget: "COLOR_PICKER",
            widgetData: {},
            grouping: "TYPOGRAPHY",
            target: "compStyle.styleButtonLabel.color"
        }, {
            displayName: "Font Family",
            widget: "FONT_SELECTOR",
            widgetData: {},
            grouping: "TYPOGRAPHY",
            target: "compStyle.styleButtonLabel.fontFamily"
        }]
    }, {
        name: "formName",
        type: "string",
        defaultValue: "",
        scope: "public"
    }, {
        name: "buttonAutofocus",
        type: "boolean",
        defaultValue: false,
        scope: "public"
    }, {
        name: "buttonDisabled",
        type: "boolean",
        defaultValue: false,
        scope: "public",
        metadata: {
            displayName: "Disabled",
            widget: "SWITCHERY",
            grouping: "BUTTON",
            target: "buttonDisabled",
            widgetData: {}
        }
    },
        {
            name: "navigateFn",
            type: "function",
            defaultValue: () => {},
            scope: "public"
        },
        {
            name: "hyperlink",
            type: "object",
            defaultValue: null,
            metadata: [{
                displayName: "Hyperlink",
                widget: "HYPERLINK",
                widgetData: {},
                grouping: "Hyperlink",
                target: "hyperlink"
            }],
            scope: "public"
        }
    ],
    functions: {
        getDisplayValue: () => {
            return __var__buttonText;
        },
        setDisplayValue: data_string => {
            __utils__setPublicVars({
                buttonText: data_string
            });
        },
        setFormData: data_string => {
            __utils__setPublicVars({
                formName: data_string
            });
        },
        getFormData: () => {
            return __var__formName;
        },
        setTooltip: tip_string => {
            __utils__setPublicVars({
                buttonToolTip: tip_string
            });
        },
        getTooltip: () => {
            return __var__buttonToolTip;
        },
        disableButton: val_boolean => {
            __utils__setPublicVars({
                buttonDisabled: val_boolean
            });
        },
        setPrefixIcon: className_string => {
            __utils__setPublicVars({
                buttonClassname: {
                    classPrefixIcon: className_string
                }
            }, true, {
                concat: false,
                erase: true
            });
        },
        setSuffixIcon: className_string => {
            __utils__setPublicVars({
                buttonClassname: {
                    classSuffixIcon: className_string
                }
            }, true, {
                concat: false,
                erase: true
            });
        },
        getIcon: () => {
            return {
                'prefixIcon': __var__buttonClassname.classPrefixIcon,
                'suffixIcon': __var__buttonClassname.classSuffixIcon
            };
        },
        redirect: (e) => {
            __var__navigateFn(__var__hyperlink);
            e.preventDefault();
        }
    },
    eventEmitters: [],
    structure: {
        type: "a",
        id: "buttonAPIbtn",
        props: {
            title: "__var__buttonToolTip",
            className: "__var__buttonClassname.__root",
            style: "Object.assign({ display: 'flex'}, __var__compStyle.__root )",
            autoFocus: "__var__buttonAutofocus",
            disabled: "__var__buttonDisabled",
            href: "__var__hyperlink ? (__var__hyperlink.name + '.html') : '#'",
            onClick: "__fn__redirect"
        },
        children: [{
            type: "i",
            props: {
                className: "__var__buttonClassname.classPrefixIcon",
                style: "Object.assign({ marginTop: 'auto', marginBottom: 'auto' }, __var__compStyle.stylePrefixIcon, { display: __var__iconFlag.prefix ? '' : 'none' })"
            },
            id: "primaryIcon"
        }, {
            type: "span",
            id: "btnText",
            props: {
                className: "__var__buttonClassname.classButtonLabel",
                style: "Object.assign({ marginTop: 'auto', marginBottom: 'auto' }, __var__compStyle.styleButtonLabel, __var__compStyle.styleButtonLabel.textStyle, { maxWidth: __var__btnMaxWidth })"
            },
            children: ["__var__buttonText"]
        }, {
            type: "i",
            props: {
                className: "__var__buttonClassname.classSuffixIcon",
                style: "Object.assign({ marginTop: 'auto', marginBottom: 'auto' }, __var__compStyle.styleSuffixIcon, { display: __var__iconFlag.suffix ? '' : 'none' })"
            },
            id: "secondaryIcon"
        }]
    },
    lifecycleHooks: {
        init: {
            before: () => {
                if (__var__iconFlag["suffix"] || __var__iconFlag["prefix"]) {
                    __utils__setPrivateVars({
                            btnMaxWidth: "70%"
                        },
                        false, {
                            erase: true,
                            concat: false
                        }
                    );
                } else if (!(__var__iconFlag["suffix"] || __var__iconFlag["prefix"])) {
                    __utils__setPrivateVars({
                            btnMaxWidth: "100%"
                        },
                        false, {
                            erase: true,
                            concat: false
                        }
                    );
                }
            }
        },
        onModelChange: (newExternalVariables) => {
            if (newExternalVariables.hasOwnProperty("iconFlag"))
                if (newExternalVariables.iconFlag["suffix"] || newExternalVariables.iconFlag["prefix"]) {
                    __utils__setPrivateVars({
                            btnMaxWidth: "70%"
                        },
                        true, {
                            erase: true,
                            concat: false
                        }
                    );
                } else if (!(newExternalVariables.iconFlag["suffix"] || newExternalVariables.iconFlag["prefix"])) {
                    __utils__setPrivateVars({
                            btnMaxWidth: "100%"
                        },
                        true, {
                            erase: true,
                            concat: false
                        }
                    );
                }
        }
    }
};