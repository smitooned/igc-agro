/**
 * Shapes
 * Triangle
 * author: Debashish
 */

"use strict";

module.exports = {
    name: "triangle",
    imports: [],
    variables: [{
        name: "alias",
        type: "string",
        defaultValue: "Triangle",
        metadata: [{
            displayName: "Alias",
            widget: "INPUT",
            widgetData: {},
            grouping: "General",
            target: "alias"
        }],
        isMandatory: false,
        scope: "public"

    },
        {
            name: "compStyle",
            type: "object",
            defaultValue: {
                __root: {
                    "height": 200,
                    "width": 200,
                    "stroke": "rgba(0,0,0,1)",
                    "strokeWidth": 1,
                    "strokeDasharray": 0
                }
            },
            metadata: [{
                displayName: 'Triangle',
                widget: 'SHAPE_PROPERTIES',
                widgetData: {
                    hyperlinkTarget: 'hyperlink'
                },
                grouping: '',
                tab: 'Style',
                target: 'compStyle.__root'
            },{
                displayName: "Background Color",
                widget: "COLOR_PICKER",
                widgetData: {},
                grouping: "General",
                target: "compStyle.__root.backgroundColor"
            }, {
                displayName: "Width",
                widget: "NUMERIC_STEPPER",
                widgetData: {},
                grouping: "General",
                target: "compStyle.__root.width"
            }, {
                displayName: "Height",
                widget: "NUMERIC_STEPPER",
                widgetData: {},
                grouping: "General",
                target: "compStyle.__root.height"
            }, {
                displayName: "Stroke",
                widget: "COLOR_PICKER",
                widgetData: {},
                grouping: "General",
                target: "compStyle.__root.stroke"
            }, {
                displayName: "Stroke-Width",
                widget: "NUMERIC_STEPPER",
                widgetData: {
                    minValue: 0
                },
                grouping: "General",
                target: "compStyle.__root.strokeWidth"
            }],
            scope: "public"
        },
        {
            name: "fillOpacity",
            type: "number",
            defaultValue: 1,
            metadata: [{
                displayName: "Fill-Opacity",
                widget: "SLIDER",
                widgetData: {
                    maxValue: 1,
                    minValue: 0,
                    stepCount: 0.1
                },
                grouping: "General",
                target: "fillOpacity"
            }],
            scope: "public"
        },
        {
            name: "strokeOpacity",
            type: "number",
            defaultValue: 1,
            metadata: [{
                displayName: "Stroke-Opacity",
                widget: "SLIDER",
                widgetData: {
                    maxValue: 1,
                    minValue: 0,
                    stepCount: 0.1
                },
                grouping: "General",
                target: "strokeOpacity"
            }],
            scope: "public"
        },
        {
            name: "colorTheme",
            type: "object",
            defaultValue: {
                scheme: "Default",
                colors: ""
            },
            scope: "public"
        }, {
            name: "colorThemeDefault",
            type: "string",
            defaultValue: "#ffffff",
            scope: "public"
        },
        {
            name: "navigateFn",
            type: "function",
            defaultValue: () => {},
            scope: "public"
        },
        {
            name: "hyperlink",
            type: "object",
            defaultValue: null,
            metadata: [{
                displayName: "Hyperlink",
                widget: "HYPERLINK",
                widgetData: {},
                grouping: "Hyperlink",
                target: "hyperlink"
            }],
            scope: "public"
        }
    ],
    functions: {
        redirect: (e) => {
            __var__navigateFn(__var__hyperlink);
            e.preventDefault();
        }
    },
    eventHandlers: [],
    eventEmitters: [],
    actions: [],
    workflows: {},
    localTemplates: {},
    structure: {
        type: 'a',
        props: {
            href: "__var__hyperlink ? (__var__hyperlink.name + '.html') : '#'",
            onClick: "__fn__redirect",
        },
        children: {
            type: "svg",
            props: {
                viewBox: "'0 0 '+__var__compStyle.__root.width+ ' '+__var__compStyle.__root.height",
                width: "__var__compStyle.__root.width",
                height: "__var__compStyle.__root.height",
                style: {
                    overflow: "initial"
                }
            },
            children: [{
                type: "polygon",
                props: {
                    points: "(__var__compStyle.__root.width/2)+','+__var__compStyle.__root.strokeWidth+' '+__var__compStyle.__root.strokeWidth+','+(__var__compStyle.__root.height-__var__compStyle.__root.strokeWidth)+' '+(__var__compStyle.__root.width-__var__compStyle.__root.strokeWidth)+','+(__var__compStyle.__root.height-__var__compStyle.__root.strokeWidth)",
                    style: {
                        fill: "__var__compStyle.__root.backgroundColor || (__var__colorTheme.colors? __var__colorTheme.colors[0]: __var__colorThemeDefault)",
                        fillOpacity: "__var__fillOpacity",
                        stroke: "__var__compStyle.__root.stroke",
                        strokeWidth: "__var__compStyle.__root.strokeWidth",
                        strokeOpacity: "__var__strokeOpacity",
                        strokeDasharray: "__var__compStyle.__root.strokeDasharray"
                    }
                }

            }]
        }
    },
    lifecycleHooks: {}
};