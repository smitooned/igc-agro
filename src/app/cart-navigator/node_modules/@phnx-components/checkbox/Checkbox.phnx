/**
 * This is a template for view definition file in
 * Project Phoenix : UI-Creator
 */
module.exports = {
    name: "Checkbox",
    imports: [
        {
            type: "css",
            from: "./assets/checkbox.css"
        }
    ],
    variables: [{
        name: "alias",
        type: "string",
        defaultValue: "checkbox",
        metadata: [{
            displayName: "Alias",
            widget: "INPUT",
            widgetData: {},
            grouping: "General",
            target: "alias"
        }],
        isMandatory: false,
        scope: "public"

    },{
        name: "isActive",
        type: "boolean",
        defaultValue: true,
        metadata: {
            displayName: "Active",
            widget: "SWITCHERY",
            widgetData: {
                isActive: "isActive"
            },
            grouping: "General",
            target: "isActive",
            tab: "State"
        },
        scope: "public"
    },{
        name: "compStyle",
        type: "object",
        properties: { erase: false },
        defaultValue: {
            __root: {
                width: 20,
                height: 20,
            }
        },
        metadata: [{
                displayName: "Height",
                widget: "NUMERIC_STEPPER",
                widgetData: {},
                grouping: "General",
                target: "compStyle.__root.height"
            },
            {
                displayName: "Width",
                widget: "NUMERIC_STEPPER",
                widgetData: {},
                grouping: "General",
                target: "compStyle.__root.width"
            }
        ],
        scope: "public"
    }
    // ,{
    //     name: "borderColor",
    //     type: "string",
    //     defaultValue: "#ff0000",
    //     metadata: {
    //         displayName: "Active Color",
    //         widget: "COLOR_PICKER",
    //         widgetData: {},
    //         grouping: "TYPOGRAPHY",
    //         target: "borderColor"
    //     },
    //     scope: "public"
    // }
    ],
    functions: {
        customRender: function() {
            // if (__elId__checkboxComp.querySelector('input[type=checkbox]').checked) {
            //     __elId__checkboxComp.querySelector('input[type=checkbox]:checked + label:before').style.color = __var__borderColor;
            //     __elId__checkboxComp.querySelector('input[type=checkbox]:checked + label:after').style.color = __var__borderColor;
            // }
        }
    },
    structure: {
        type: "input",
        props: {
            type: "checkbox",
            style: {
                height: "__var__compStyle.__root.height",
                width: "__var__compStyle.__root.width",
                margin: "0px"
            },
            checked: "__var__isActive",
            // id: "__var__data.id",
            onClick: "__wf__checkboxClick",
            onChange: "__wf__checkboxChange"
        }
    },
    workflows: {
        checkboxClick: eventObj => {
            eventObj.preventDefault();
            // if(eventObj.currentTarget.previousSibling.checked == __var__isActive){
            //     eventObj.currentTarget.previousSibling.checked = true;
            // }
            // else {
            //     eventObj.currentTarget.previousSibling.checked = false;
            // }

            // eventObj.currentTarget.previousSibling.checked = !eventObj.currentTarget.previousSibling.checked;
        },
        checkboxChange: () => {
            //Do something?
        }
    },
    lifecycleHooks: {
        init: {
            before: function() {
            },
            after: function() {
                __fn__customRender();
            }
        },
        onModelChange: function(newExternalVariables) {},
        reRender: {
            shouldAllow: function(newExternalVariables) {
                return true;
            },
            before: function(newExternalVariables) {

            },
            after: function(newExternalVariables) {
                __fn__customRender();
            }
        },
        cleanup: function() {

        }
    }
};