/**
 * This is a template for view definition file in
 * Project Phoenix : UI-Creator
 */
module.exports = {
    name: "TabHead",
    imports: [{
        type: "component",
        take: "icon",
        from: "@phnx-components/thumbnail"
    }],
    variables: [{
        name: "tabName",
        defaultValue: "tabs",
        type: "string",
        scope: "public"
    }, {
        name: "tabActive",
        type: "string",
        scope: "public"
    }],
    structure: {
        id: "TabHead",
        type: "li",
        props: {
            className: "__var__tabActive",
            style: {
                height: "100%",
                maxWidth: "200px",
                minWidth: "50px"
            }
        },
        children: [{
            id: "name",
            type: "a",
            props: {
                className: "",
                style: {
                    color: "black",
                    height: "100%",
                    textAlign: "left",
                    verticalAlign: "middle",
                    textOverflow: "ellipsis",
                    overflow: "hidden"
                },
                role: "tab",
                "data-toggle": "tab"
            },
            children: ["__var__tabName"]
        }, {
            id: "closeTab",
            type: "__imports__icon",
            props: {
                ThumbnailClass: {iconClass:"fa fa-times-circle closeTab"},
                ThumbnailStyle: {
                    iconStyle: {
                        position: "absolute",
                        top: "33%",
                        right: "8px",
                        display: "__fn__showCloseButton()",
                        color: "lightslategray"
                    }
                }
            }
        }]
    },
    functions: {
        showCloseButton: () => {
            return 'block';
        }
    },
    eventHandlers: [],
    eventEmitters: [{
        id: "elementSelected",
        from: {
            name: "onClick"
        },
        emit: {
            selectElement: {
                payload: [{
                    what: "elementSelected",
                    as: "status"
                }]
            }
        }
    }, {
        id: "closeTab",
        from: {
            closeTab: "thumbnailClick"
        },
        emit: {
            closeTab: {
                payload: [{
                    what: "closeTab",
                    as: "status"
                }]
            }
        }
    }],
    actions: [],
    workflows: {}
};