'use strict';
module.exports = {
    name: "Confirmation",
    imports: [{
        type: "css",
        from: "./confirmation.css"
    }],
    variables: [{
        name: "headerText",
        defaultValue: "Delete Application",
        scope: "private",
        type: "string"
    }, {
        name: "isConfirmEnabled",
        defaultValue: true,
        scope: "public",
        type: "boolean"
    }, {
        name: "isOpen",
        defaultValue: false,
        scope: "private"
    }, {
        name: "confirmBtnText",
        defaultValue: "Confirm",
        scope: "private",
        type: "string"
    }, {
        name: "cancelBtnText",
        defaultValue: "Cancel",
        scope: "private",
        type: "string"
    }, {
        name: "confirmCB",
        defaultValue: null,
        scope: "private"
    }, {
        name: "cancelCB",
        defaultValue: null,
        scope: "private"
    }, {
        name: "confirmationBody",
        defaultValue: "",
        scope: "private"
    }],
    functions: {
        open: () => __utils__setPrivateVars({isOpen: true}),
        close: () => __utils__setPrivateVars({isOpen: false}),
        setContinueCallBack: fn => {
            if(typeof fn === "function") {
                __utils__setPrivateVars({
                    confirmCB: fn
                }, false);
            }
        },
        setCancelCallBack: fn => {
            if(typeof fn === "function") {
                __utils__setPrivateVars({
                    cancelCB: fn
                }, false);
            }
        },
        setContinueText: label => {
            __utils__setPrivateVars({
                confirmBtnText: label
            }, false);
        },
        setCancelText: label => {
            __utils__setPrivateVars({
                cancelBtnText: label
            }, false);
        },
        setHeaderText: text => {
            __utils__setPrivateVars({
                headerText: text
            }, false);
        },
        confirm: message => {
            __utils__setPrivateVars({
                confirmationBody: message
            });
            __fn__open();
        },
        _stopClick: (e) => e.stopPropagation()
    },
    workflows: {
        cancelWf: () => {
            __evt__cancelClicked();
            if(__var__cancelCB) {
                __var__cancelCB();
            }
            __fn__close();
        },
        confirmWf: () => {
            __evt__confirmClicked();
            if(__var__confirmCB) {
                __var__confirmCB();
            }
            __fn__close();
        }
    },
    eventHandlers: [{
        id: "emitCancel",
        from: {
            cancelBtn: "onClick"
        },
        workflow: ["cancelWf"]
    }, {
        id: "emitConfirm",
        from: {
            confirm: "onClick"
        },
        workflow: ["confirmWf"]
    }],
    structure: {
        type: "div",
        props: {
            className: "disabled-background",
            style: {
                display: "__var__isOpen ? 'flex' : 'none'"
            },
            onClick: "__fn__close"
        },
        children: {
            type: "div",
            props: {
                className: "confirmation-popup",
                onClick: "__fn___stopClick"
            },
            children: [{
                type: "div",
                props: {
                    className: "confirmation-header"
                },
                children: ["__var__headerText", {
                    type: "div",
                    props: {
                        className: "closeBtn-div",
                        onClick: "__fn__close"
                    },
                    children: {
                        type: "i",
                        props: {
                            className: "fa fa-close"
                        }
                    }
                }]
            }, {
                type: "hr",
                props: {
                    className: "margin-none"
                }
            }, {
                type: "div",
                props: {
                    className: "confirmation-body"
                },
                children: "__var__confirmationBody"
            }, {
                type: "hr",
                props: {
                    className: "margin-none"
                }
            }, {
                type: "div",
                props: {
                    className: "confirmation-footer"
                },
                children: [{
                    type: "button",
                    id: "cancelBtn",
                    props: {
                        className: "btn btn-default m-r-5"
                    },
                    children: "__var__cancelBtnText"
                }, {
                    type: "button",
                    id: "confirmBtn",
                    props: {
                        className: "btn btn-primary",
                        disabled: "!__var__isConfirmEnabled"
                    },
                    children: "__var__confirmBtnText"
                }]
            }]
        }
    }
};