/**
 * This is the  definition file that is being
 * created for all class APIs
 */
const baseDef = require('./styleAPI.phnxdef');
module.exports = Object.assign(baseDef, {
    varMap: {
        class: "class",
        style: "style"
    },
    getClass: function(ckey) {
        const classObj = __evar__[__utils__mapDefVarNames("class")];
        return classObj[ckey];
    },
    setClass: function(ckey, data_string) {
        const updatedClassObj = {};
        updatedClassObj[ckey] = data_string;
        __utils__setPublicVars({
            [__utils__mapDefVarNames("class")]: updatedClassObj
        });
    },
    addClass: function(ckey, data_string) {
        const newClass = __evar__[__utils__mapDefVarNames("class")];
        if (!__fn__hasClass(ckey, data_string)) {
            newClass[ckey] = newClass[ckey] + ' ' + data_string;
            __utils__setPublicVars({
                [__utils__mapDefVarNames("class")]: newClass
            });
        }
    },
    removeClass: function(ckey, data_string) {
        const removedClass = __evar__[__utils__mapDefVarNames("class")];
        removedClass[ckey] = removedClass[ckey].replace(data_string, '');
        removedClass[ckey] = removedClass[ckey].trim();
        __utils__setPublicVars({
            [__utils__mapDefVarNames("class")]: removedClass
        });
    },
    clearClass: function(ckey) {
        const updatedClass = __evar__[__utils__mapDefVarNames("class")];
        updatedClass[ckey] = '';
        __utils__setPublicVars({
            [__utils__mapDefVarNames("class")]: updatedClass
        }, false, {
            erase: true
        });
    },
    hasClass: function(ckey, data_string) {
        const currentClass = __evar__[__utils__mapDefVarNames("class")];
        return (currentClass[ckey].split(' ').indexOf(data_string) > -1);
    },
    toggleClass: function(ckey, data_string) {
        const currentClass = __evar__[__utils__mapDefVarNames("class")];
        if (currentClass[ckey].split(' ').indexOf(data_string) > -1) {
            currentClass[ckey] = currentClass[ckey].replace(data_string, '');
        } else {
            currentClass[ckey] = currentClass[ckey] + ' ' + data_string;
        }
        currentClass[ckey] = currentClass[ckey].trim();
        __utils__setPublicVars({
            [__utils__mapDefVarNames("class")]: currentClass
        }, false, {
            erase: true
        });
    }
});