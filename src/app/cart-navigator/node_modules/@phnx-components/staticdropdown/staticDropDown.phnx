/*
 Author: Smit Shah
 Date: 8-11-17
 */

"use strict!";

module.exports = {
    name: "staticDropDown",
    variables: [
        {
            name: "staticDropDownClass",
            properties: { erase: false },
            defaultValue: {
                __root: ""
            },
            type: "object",
            scope: "public"
        },
        {
            name: "alias",
            type: "string",
            defaultValue: "Dropdown",
            metadata: [{
                displayName: "Alias",
                widget: "INPUT",
                widgetData: {},
                grouping: "General",
                target: "alias"
            }],
            isMandatory: false,
            scope: "public"
        },
        {
            name: "componentMeta",
            scope: "public",
            defaultValue: {
                displayName: "Select Menu",
                options: [
                    { name: "menu 1", link: null },
                    { name: "menu 2", link: null },
                    { name: "menu 3", link: null },
                    { name: "menu 4", link: null },
                    { name: "menu 5", link: null }
                ]
            },
            type: "array",
            metadata: [
                {
                    displayName: 'Dropdown',
                    widget: 'MULTILINK_PROPERTIES',
                    widgetData: {},
                    grouping: '',
                    tab: 'Hyperlink',
                    target: 'componentMeta.options'
                },
                {
                    displayName: "Dropdown Placeholder",
                    widget: "INPUT",
                    widgetData: {},
                    grouping: "General",
                    target: "componentMeta.displayName"
                },
                {
                    displayName: "Dropdown Options",
                    widget: "MULTILINK",
                    widgetData: {
                        multiLink: true,
                        placeHolder: "Add New Menu Option"
                    },
                    grouping: "General",
                    target: "componentMeta.options"
                }
            ]
        },
        {
            name: "compStyle",
            defaultValue: {
                __root: {
                    height: 40,
                    width: 180
                },
                buttonStyle: {
                    backgroundColor: "#e2e2e2",
                    color: "black",
                    "fontSize": "18px",
                    "fontWeight": "400",
                    "fontFamily": "Arial",
                    "fontStyle": "normal",
                    height: "100%",
                    width: "100%",
                    position: "inherit",
                    padding: "10px",
                    borderWidth:"1px",
                    borderStyle: {
                        text: "Solid",
                        className: "fa fa-trash",
                        id: "solid"
                    },
                    borderColor: "rgba(0,0,0,1)",
                    borderRadius:0
                },
                listItem: {
                    backgroundColor: "#ffffff",
                    color: "#333",
                    "fontSize": "14px",
                    "fontWeight": "400",
                    "fontFamily": "Arial",
                    "fontStyle": "normal"
                }
            },
            metadata: [
                {
                    displayName: 'Dropdown',
                    widget: 'DROPDOWN_STYLE_PROPERTIES',
                    widgetData: {
                        listStyle: 'compStyle.listItem'
                    },
                    grouping: '',
                    tab: 'Style',
                    target: 'compStyle.buttonStyle'
                },
                {
                    displayName: 'Table',
                    widget: 'DROPDOWN_TEXT_PROPERTIES',
                    widgetData: {
                        listTextStyle: 'compStyle.listItem',
                        displayName: 'componentMeta.displayName'
                    },
                    grouping: '',
                    tab: 'Text',
                    target: 'compStyle.buttonStyle'
                },
                {
                    displayName: "Height",
                    widget: "NUMERIC_STEPPER",
                    widgetData: {
                        minValue: 0
                    },
                    grouping: "General",
                    target: "compStyle.__root.height"
                },
                {
                    displayName: "Width",
                    widget: "NUMERIC_STEPPER",
                    widgetData: {
                        minValue: 0
                    },
                    grouping: "General",
                    target: "compStyle.__root.width"
                },
                {
                    displayName: "Dropdown Menu Color",
                    widget: "COLOR_PICKER",
                    widgetData: {},
                    grouping: "Dropdown Menu Style",
                    target: "compStyle.buttonStyle.backgroundColor"
                },
                {
                    displayName: "Inner Padding",
                    widget: "COMBOBOX",
                    widgetData: {},
                    grouping: "Dropdown Menu Style",
                    target: "compStyle.buttonStyle.padding"
                },
                {
                    displayName: "Font Size",
                    widget: "COMBOBOX",
                    widgetData: {},
                    grouping: "Dropdown Menu Style",
                    target: "compStyle.buttonStyle.fontSize"
                },
                {
                    displayName: "Text Color",
                    widget: "COLOR_PICKER",
                    widgetData: {},
                    grouping: "Dropdown Menu Style",
                    target: "compStyle.buttonStyle.color"
                },
                {
                    displayName: "Font",
                    widget: "FONT_SELECTOR",
                    widgetData: {},
                    grouping: "Dropdown Menu Style",
                    target: "compStyle.buttonStyle.fontFamily"
                },
                {
                    displayName: "Font Weight",
                    widget: "FONT_WEIGHT_SETTER",
                    widgetData: {},
                    grouping: "Dropdown Menu Style",
                    target: "compStyle.buttonStyle.fontWeight"
                },
                //
                {
                    displayName: "Background Color",
                    widget: "COLOR_PICKER",
                    widgetData: {},
                    grouping: "List Style",
                    target: "compStyle.listItem.backgroundColor"
                },
                {
                    displayName: "Font Size",
                    widget: "COMBOBOX",
                    widgetData: {},
                    grouping: "List Style",
                    target: "compStyle.listItem.fontSize"
                },
                {
                    displayName: "Text Color",
                    widget: "COLOR_PICKER",
                    widgetData: {},
                    grouping: "List Style",
                    target: "compStyle.listItem.color"
                },
                {
                    displayName: "Font",
                    widget: "FONT_SELECTOR",
                    widgetData: {},
                    grouping: "List Style",
                    target: "compStyle.listItem.fontFamily"
                },
                {
                    displayName: "Font Weight",
                    widget: "FONT_WEIGHT_SETTER",
                    widgetData: {},
                    grouping: "List Style",
                    target: "compStyle.listItem.fontWeight"
                }
            ],
            scope: "public",
            type: "object"
        },
        {
            name: "navigateFn",
            scope: "public",
            type: 'function'
        },
        {
            name: "previewMode",
            type: "boolean",
            defaultValue: false,
            scope: "public"
        }
    ],
    imports: [
        {
            type: 'css',
            from: './staticDropDown.css'
        }
    ],
    functions: {
        getOptions: () => {
            let options = __var__componentMeta["options"];
            console.log("multilink output", options, options.length);
            if (typeof options == "string") {
                options = options.split(",").map(name => ({ name, link: '' }));
            }
            // let searchBox = __fn__getSearchElement();
            return options.map(function (item) {
                return __tmpl__listElement
            });
        },
        // getSearchElement: () => {
        //     return __tmpl__searchElement
        // },
        // get
        redirect: (evt) => {
            console.log(evt.currentTarget.dataset.id);
            let a = JSON.parse(evt.currentTarget.selectedOptions[0].dataset.id);
            if (a.link) {
                __var__navigateFn(a.link);
            }
            evt.preventDefault();
        },
        handleFocusOut: (evt) => {
            console.log('blurred dropdown');
            evt.preventDefault();
        },
        handleOpening: (evt) => {
            evt.preventDefault();
            evt.currentTarget.blur();
            window.focus();
            return false
        }
    },
    localTemplates: {
        // searchElement: {
        //     type: "option",
        //     props: {
        //         className: "no-padding",
        //         style: {
        //             display: "__var__configOpts.isSearchable ? 'block': 'none'",
        //             position: "static"
        //         }
        //     },
        //     children: [
        //         {
        //             type: "div",
        //             props: {
        //                 style: {
        //                     border: "1px solid #d3d3d3",
        //                     padding: "2px",
        //                     width: "87%",
        //                     position: ""
        //                 }
        //             },
        //             children: [
        //                 {
        //                     type: "input",
        //                     props: {
        //                         placeHolder: "Search",
        //                         style: {
        //                             border: "none",
        //                             width: "79%",
        //                             fontSize: "smaller"
        //                         }
        //                     }
        //                 },
        //                 {
        //                     type: "i",
        //                     props: {
        //                         className: "fa fa-search",
        //                         style: {
        //                             width: "10%",
        //                             fontSize: "smaller",
        //                             marginRight: "5px"
        //
        //                         }
        //                     }
        //                 }
        //             ]
        //         }
        //     ]
        // },
        listElement: {
            type: "option",
            props: {
                value: "__fnParam__item.name",
                className: "no-padding",
                "data-id": "JSON.stringify(__fnParam__item)",
                style: "__var__compStyle.listItem"
            },
            children: [
                {
                    type: "a",
                    props: {
                        href: "__fnParam__item.link ? (__fnParam__item.link.name + '.html') : '#'",
                        value: "__fnParam__item.link ? (__fnParam__item.link.name + '.html') : ''",
                        style: "__var__compStyle.listItem"
                    },
                    children: ["__fnParam__item.name"]
                }
            ]
        }
    },
    structure: {
        type: "div",
        props: {
            className: "selectBox-wrap",
            style: {
                height: "__var__compStyle.__root.height",
                width: "__var__compStyle.__root.width",
                position: "inherit"
            }
        },
        children: [
            {
                type: "div",
                props: {
                    style: {
                        height: "100%",
                        width: "100%"
                    }
                },
                children: [
                    {
                        type: "select",
                        id: "selectBox",
                        props: {
                            className: "btn selectBox-btn",
                            type: "button",
                            style: "Object.assign({},__var__compStyle.buttonStyle, { pointerEvents: 'all'})",
                            onFocus: "__fn__handleOpening",
                            onChange: "__fn__redirect",
                            value: "placeHolder"
                        },
                        children: [
                            {
                                type: "option",
                                props: {
                                    value: "placeHolder",
                                    className: "no-padding",
                                    selected: true,
                                    style: {
                                        display: 'none'
                                    }
                                },
                                children: [
                                    {
                                        type: "a",
                                        props: {
                                            style: "__var__compStyle.listItem",
                                            onClick: "__fn__redirect"
                                        },
                                        children: ["__var__componentMeta.displayName"]
                                    }
                                ]
                            },
                            "__fn__getOptions()"
                        ]
                    },
                    {
                        type: "div",
                        props: {
                            style: {
                                width: "0%",
                                display: "inline-block",
                                verticalAlign: "middle"
                            }
                        },
                        children: [
                            {
                                type: "i",
                                props: {
                                    style: {
                                        color: "__var__compStyle.buttonStyle.color",
                                        fontSize:"__var__compStyle.buttonStyle.fontSize",
                                        marginLeft: "-40px"
                                    },
                                    className: "fa fa-caret-down"
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    lifecycleHooks: {
        init: {
            before: () => {},
            after: () => {
                $(__elId__selectBox).find('a').attr('onclick', 'return false');
            }
        },
        onModelChange: (newexternalvariables) => {
            // if (newexternalvariables.hasOwnProperty("configOpts")) {
            //     if (!newexternalvariables["configOpts"]["showOptions"] && __var__configOpts["showOptions"]) {
            //         //     let compStyle = __var__compStyle;
            //         //     compStyle.__root.height = compStyle.buttonStyle.height;
            //         //     compStyle.__root.width = compStyle.buttonStyle.width;
            //         GlobalEvents.trigger("updateProperty" + newexternalvariables["id"], newexternalvariables["id"], {
            //             "compStyle.__root.height": __var__compStyle.buttonStyle.height
            //         });
            //     }
            //     if (newexternalvariables["configOpts"]["showOptions"] && !__var__configOpts["showOptions"]) {
            //         let btnHeight = parseInt(__var__compStyle.buttonStyle.height);
            //         btnHeight = btnHeight + 100;
            //         GlobalEvents.trigger("updateProperty" + newexternalvariables["id"], newexternalvariables["id"], {
            //             "compStyle.__root.height": btnHeight+ "px"
            //         });
            //     }
            // }
        },
        reRender: {
            before: () => {
            },
            after: () => {
            }
        }
    }
};