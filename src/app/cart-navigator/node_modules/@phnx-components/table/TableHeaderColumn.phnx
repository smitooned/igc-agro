/**
 * This is a template for view definition file in
 * Project Phoenix : UI-Creator
 */
module.exports = {
    name: "MTableRow",
    imports: [],
    variables: [
    {
        name: "headerClass",
        type: "string",
        defaultValue:null,
        scope: "public"
    },
    {
        name: "headerLabel",
        type: "any",
        defaultValue: "Heading",
        scope: "public"
    }, {
        name: "originLabel",
        type: "array",
        defaultValue: "header",
        isMandatory: true,
        scope: "public"
    }, {
        name: "byPass",
        type: "function",
        isMandatory: true,
        scope: "public"
    }, {
        name: "sortFlag",
        type: "boolean",
        isMandatory: true,
        scope: "public"
    }, {
        name: "style",
        type: "object",
        isMandatory: true,
        scope: "public"
    }, {
        name: 'className',
        type: 'string',
        isMandatory: false,
        scope: 'public'
    }],
    functions: {
        resolveClass: () => {
            let classString = "";
            if(__var__sortFlag){
                classString+="headers sorting";
            } else {
                classString+="headers";
            }
            classString+=" "+__var__className;
            return classString;
        },
        triggerSort: evObj => {
            let flag = 0;
            if ($(evObj.currentTarget).hasClass('sorting') || $(evObj.currentTarget).hasClass('sorting_desc')) {
                $('.sorting_desc, .sorting_desc').removeClass('sorting_desc sorting_asc').addClass('sorting');
                $(evObj.currentTarget).removeClass('sorting').addClass('sorting_asc');
                flag = 1;
            }
            else if ($(evObj.currentTarget).hasClass('sorting_asc')) {
                $('.sorting_asc, .sorting_desc').removeClass('sorting_desc sorting_asc').addClass('sorting');
                $(evObj.currentTarget).removeClass('sorting').addClass('sorting_desc');
                flag = -1;
            }
            if (flag == 0) {
                return;
            }
            const payload = {};
            payload['label'] = __var__originLabel;
            payload['direction'] = flag;
            payload['type'] = 'sort';
            __var__byPass.onNext(payload);
        }
    },
    eventHandlers: [],
    eventEmitters: [],
    localTemplates: {},
    structure: {
        type: "th",
        props: {
            className: "__fn__resolveClass()",
            "aria-controls": "basicTable",
            onClick: "__fn__triggerSort",
            "data-label": "__var__originLabel",
            style: "__var__style"
        },
        children: "__var__headerLabel"
    },
    lifecycleHooks: {},
    actions: [],
    workflows: {}
};
