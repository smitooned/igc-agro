"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.funcStringify = funcStringify;
exports.doReplace = doReplace;
exports.prettierConf = void 0;

/**
 * This file contains the functionalities which is common across the
 * loader npm package
 *
 * @author Aftab Khan
 * @date 15-10-2016
 */

/*This is the length of every placeholder in the class barebone string*/
var magic_num = 14;
var prettierConf = {
  printWidth: 120,
  tabWidth: 4,
  useTabs: false,
  semi: true,
  singleQuote: true,
  arrowParens: 'avoid',
  trailingComma: 'none',
  bracketSpacing: true,
  parser: 'babylon'
};
/**
 * This function converts a JSON to string format preserving function
 * in the string format
 * @param  {any}    anything Any Object/Variable
 * @return {string}          Stringified for of what that object is
 */

exports.prettierConf = prettierConf;

function funcStringify(anything) {
  var ret_str = JSON.stringify(anything, function (key, val) {
    if (typeof val === 'function') return val + '';
    return val;
  });
  ret_str = ret_str.replace(/\\"/g, "'");
  ret_str = ret_str.replace(/"([^"]*function [^"]*|\s*\([^\)]*\)\s*=>[^"]*|\s*[A-Za-z0-9_]*\s*=>[^"]*)"/g, function (s) {
    return eval(s);
  });
  return ret_str;
}
/**
 * Insert the statement into the source at the given placeholder
 * @param  {string} jsx_source  Current jsx source
 * @param  {string} placeholder Placeholder wherein the statement is inserted
 * @param  {string} statement   Statement to be inserted
 * @return {string}             String post insertion
 */


function doReplace(jsx_source, placeholder, statement) {
  var ret_str = jsx_source;
  var insert_index = ret_str.indexOf(placeholder) + magic_num;
  ret_str = ret_str.slice(0, insert_index) + statement + ret_str.slice(insert_index);
  return ret_str;
}