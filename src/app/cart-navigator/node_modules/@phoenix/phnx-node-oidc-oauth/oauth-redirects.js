
const { Issuer } = require('openid-client');
var XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest;
module.exports = function addOAuthRedirects(app, options) {

    //Replace start and ed '/' with ''  
    var basePath = options.appBasePath.replace(/(^\/+|\/+$)/g, "");
    var redirectRoute = options.redirectRoute.replace(/(^\/+|\/+$)/g, "");
    var redirectUri = options.appBaseUrl.replace(/\/+$/, "") + "/" + basePath + "/auth/callback";
    var getTokenUriPrefix = options.appBaseUrl.replace(/\/+$/, "") + "/" + basePath;

    var tenantId = options.tenantId || 'consumers';
    let IssuerUrl = options.IssuerUrl;
    let clientID = options.clientId;
    let clientSecret = options.clientSecret;
    let responseTypes = ['code']


    var authLogin = new RegExp(`\\/(${basePath})?\\/auth\\/login`);
    var authCallback = new RegExp(`\\/(${basePath})?\\/auth\\/callback`);
    var getTokenUrlRegex = new RegExp(`(${basePath}\\/)+`);

    //OIDC
    app.get(authLogin, function(req, res) {
        Issuer.discover(IssuerUrl)
        .then(function (requiredIssuer) {
            const client = new requiredIssuer.Client({
                client_id: clientID,
                client_secret: clientSecret,
                redirect_uris: redirectUri,
                response_types: responseTypes,
            });
            var reuri = client.authorizationUrl({redirect_uri:redirectUri,response_type:responseTypes,scope:'openid'})  
            res.redirect(reuri);
        });
    });

    app.get(authCallback, function(req,res) {
        let getTokenUrl = getTokenUriPrefix + req.originalUrl.replace(/\/+/g, "/");
        getTokenUrl = getTokenUrl.replace(getTokenUrlRegex, "$1");
        Issuer.discover(IssuerUrl) 
        .then(function (requiredIssuer) {
            const client = new requiredIssuer.Client({
                client_id: clientID,
                client_secret: clientSecret,
                redirect_uris: redirectUri,
                response_types: responseTypes
            }); 
            const params = client.callbackParams(req);        
            var data = `client_id=${clientID}&scope=openid&code=${params.code}&redirect_uri=${redirectUri}&grant_type=authorization_code&client_secret=${clientSecret}`;
            var xhr = new XMLHttpRequest();
            xhr.withCredentials = true;
            
            xhr.addEventListener("readystatechange", function() {
                if(this.readyState === 4) {
                    var data = JSON.parse(this.responseText);
                    return res.redirect(getTokenUriPrefix + "/" + redirectRoute + "?access_token=" + data.access_token + '&id_token=' + data.id_token);
                }
            });
            xhr.open("POST", requiredIssuer.token_endpoint);
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            xhr.send(data);
        });
    });
};
