"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.INVALID_PREFIX = exports.UNABLE_TO_SEND_MESSAGE = exports.SOCKET_ALREADY_DISCONNECTED = exports.NULL_PAYLOAD_ACTION = exports.NULL_PAYLOAD_EVT = exports.WRONG_PROPERTIES = exports.BAD_PAYLOAD = exports.NOT_IN_SOURCE = void 0;

/*------------------------------------------- phnx-utils ---------------------------------------- */

/* payload construction */
var NOT_IN_SOURCE = function NOT_IN_SOURCE(what) {
  return "While constructing the payload it was found that " + "the what[".concat(what, "] in the source is not defined.") + " This attribute will be omitted in the payload";
};

exports.NOT_IN_SOURCE = NOT_IN_SOURCE;

var BAD_PAYLOAD = function BAD_PAYLOAD(typeOfItem) {
  return "While constructing the payload it was found that " + "item in take was of type(".concat(typeOfItem, "), expected it to be either a string or object");
};
/* event related */


exports.BAD_PAYLOAD = BAD_PAYLOAD;

var WRONG_PROPERTIES = function WRONG_PROPERTIES(pageName, actionName, property) {
  return "In page ".concat(pageName, ", property ").concat(property, " of event/action ").concat(actionName, " did not resolve to a boolean");
};

exports.WRONG_PROPERTIES = WRONG_PROPERTIES;

var NULL_PAYLOAD_EVT = function NULL_PAYLOAD_EVT(pageName, attrPath, event) {
  return "In page[".concat(pageName, "], payloadModifier of variable[").concat(attrPath, "] of event/target[").concat(event, "] returned null");
};
/* action related */


exports.NULL_PAYLOAD_EVT = NULL_PAYLOAD_EVT;

var NULL_PAYLOAD_ACTION = function NULL_PAYLOAD_ACTION(pageName, actionName) {
  return "In page[".concat(pageName, "], payloadModifier of action[").concat(actionName, "] in returned null");
};
/* socket related */


exports.NULL_PAYLOAD_ACTION = NULL_PAYLOAD_ACTION;

var SOCKET_ALREADY_DISCONNECTED = function SOCKET_ALREADY_DISCONNECTED(name, pageName) {
  return "The socket connection[".concat(name, "] in page[").concat(pageName, "] is already disconnected");
};

exports.SOCKET_ALREADY_DISCONNECTED = SOCKET_ALREADY_DISCONNECTED;

var UNABLE_TO_SEND_MESSAGE = function UNABLE_TO_SEND_MESSAGE(name, pageName) {
  return "Unable to send message through the socket connection[".concat(name, "] in page[").concat(pageName, "]");
};

exports.UNABLE_TO_SEND_MESSAGE = UNABLE_TO_SEND_MESSAGE;

var INVALID_PREFIX = function INVALID_PREFIX(name, pageName) {
  return "Target variable should have valid prefix, ".concat(name, " is invalid, in page ").concat(pageName);
};

exports.INVALID_PREFIX = INVALID_PREFIX;