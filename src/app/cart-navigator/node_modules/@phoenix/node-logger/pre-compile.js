var winston = require('winston');
var amqpLogger = require('./amqpLogger').AMQP;
var httpLogger = require("./httpLogger");

class PhoenixLogger {
	constructor(options) {
		//Default winston configuration
		this._logger = new winston.Logger({colors: {error: 'red', warn: 'yellow', info: 'green', verbose: 'orange', debug: 'blue', silly: 'white'}});
		this._logger.add(winston.transports.Console, {colorize: true, level: 'silly'});
		options = options || [];
		options.forEach(item => {
			var key;
			var transportOptions;
			if(typeof item === 'string') {
				key = item;
			} else {
				key = item.name;
				transportOptions = item.options;
			}

			switch(key){
				case 'https':
				{
					this._logger.add(httpLogger, transportOptions || {});
					break;
				}
				case 'amqp':
				{
					this._logger.add(amqpLogger, transportOptions || {});
					break;
				}
				case 'console':
				{
					this._logger.remove(winston.transports.Console);
					this._logger.add(winston.transports.Console, transportOptions || {});
					break;
				}
				default:
				{
					break;
				}
			}
		});
	}

	get instance() {
		return this._logger;
	}
}

module.exports = PhoenixLogger;
